/*
Farcaster API V2

The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details. 

API version: 2.33.1
Contact: team@neynar.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the Fids type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Fids{}

// Fids List of FIDs
type Fids struct {
}

// NewFids instantiates a new Fids object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFids() *Fids {
	this := Fids{}
	return &this
}

// NewFidsWithDefaults instantiates a new Fids object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFidsWithDefaults() *Fids {
	this := Fids{}
	return &this
}

func (o Fids) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Fids) ToMap() (map[string]interface{}, error) {
	toSerialize := make([]interface{}, len(o.Items))
	for i, item := range o.Items {
		toSerialize[i] = item
	}
	return toSerialize, nil
}

func (o *Fids) UnmarshalJSON(data []byte) (err error) {
	return json.Unmarshal(data, &o.Items)
}

type NullableFids struct {
	value Fids
	isSet bool
}

func (v NullableFids) Get() Fids {
	return v.value
}

func (v *NullableFids) Set(val Fids) {
	v.value = val
	v.isSet = true
}

func (v NullableFids) IsSet() bool {
	return v.isSet
}

func (v *NullableFids) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFids(val Fids) *NullableFids {
	return &NullableFids{value: val, isSet: true}
}

func (v NullableFids) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFids) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


