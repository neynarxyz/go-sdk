/*
Farcaster API V2

The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details. 

API version: 2.33.1
Contact: team@neynar.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the UserVerifiedAccountsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserVerifiedAccountsInner{}

// UserVerifiedAccountsInner struct for UserVerifiedAccountsInner
type UserVerifiedAccountsInner struct {
	Platform *string `json:"platform,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewUserVerifiedAccountsInner instantiates a new UserVerifiedAccountsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserVerifiedAccountsInner() *UserVerifiedAccountsInner {
	this := UserVerifiedAccountsInner{}
	return &this
}

// NewUserVerifiedAccountsInnerWithDefaults instantiates a new UserVerifiedAccountsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserVerifiedAccountsInnerWithDefaults() *UserVerifiedAccountsInner {
	this := UserVerifiedAccountsInner{}
	return &this
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *UserVerifiedAccountsInner) GetPlatform() string {
	if o == nil || IsNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserVerifiedAccountsInner) GetPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *UserVerifiedAccountsInner) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *UserVerifiedAccountsInner) SetPlatform(v string) {
	o.Platform = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *UserVerifiedAccountsInner) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserVerifiedAccountsInner) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *UserVerifiedAccountsInner) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *UserVerifiedAccountsInner) SetUsername(v string) {
	o.Username = &v
}

func (o UserVerifiedAccountsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserVerifiedAccountsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableUserVerifiedAccountsInner struct {
	value *UserVerifiedAccountsInner
	isSet bool
}

func (v NullableUserVerifiedAccountsInner) Get() *UserVerifiedAccountsInner {
	return v.value
}

func (v *NullableUserVerifiedAccountsInner) Set(val *UserVerifiedAccountsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUserVerifiedAccountsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUserVerifiedAccountsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserVerifiedAccountsInner(val *UserVerifiedAccountsInner) *NullableUserVerifiedAccountsInner {
	return &NullableUserVerifiedAccountsInner{value: val, isSet: true}
}

func (v NullableUserVerifiedAccountsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserVerifiedAccountsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


