/*
Farcaster API V2

The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details. 

API version: 2.33.1
Contact: team@neynar.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FarcasterManifestTriggersInnerOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FarcasterManifestTriggersInnerOneOf1{}

// FarcasterManifestTriggersInnerOneOf1 struct for FarcasterManifestTriggersInnerOneOf1
type FarcasterManifestTriggersInnerOneOf1 struct {
	Type string `json:"type"`
	Id string `json:"id"`
	Url string `json:"url"`
	Name *string `json:"name,omitempty"`
}

type _FarcasterManifestTriggersInnerOneOf1 FarcasterManifestTriggersInnerOneOf1

// NewFarcasterManifestTriggersInnerOneOf1 instantiates a new FarcasterManifestTriggersInnerOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFarcasterManifestTriggersInnerOneOf1(type_ string, id string, url string) *FarcasterManifestTriggersInnerOneOf1 {
	this := FarcasterManifestTriggersInnerOneOf1{}
	this.Type = type_
	this.Id = id
	this.Url = url
	return &this
}

// NewFarcasterManifestTriggersInnerOneOf1WithDefaults instantiates a new FarcasterManifestTriggersInnerOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFarcasterManifestTriggersInnerOneOf1WithDefaults() *FarcasterManifestTriggersInnerOneOf1 {
	this := FarcasterManifestTriggersInnerOneOf1{}
	return &this
}

// GetType returns the Type field value
func (o *FarcasterManifestTriggersInnerOneOf1) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *FarcasterManifestTriggersInnerOneOf1) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *FarcasterManifestTriggersInnerOneOf1) SetType(v string) {
	o.Type = v
}

// GetId returns the Id field value
func (o *FarcasterManifestTriggersInnerOneOf1) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FarcasterManifestTriggersInnerOneOf1) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FarcasterManifestTriggersInnerOneOf1) SetId(v string) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *FarcasterManifestTriggersInnerOneOf1) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *FarcasterManifestTriggersInnerOneOf1) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *FarcasterManifestTriggersInnerOneOf1) SetUrl(v string) {
	o.Url = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FarcasterManifestTriggersInnerOneOf1) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarcasterManifestTriggersInnerOneOf1) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FarcasterManifestTriggersInnerOneOf1) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FarcasterManifestTriggersInnerOneOf1) SetName(v string) {
	o.Name = &v
}

func (o FarcasterManifestTriggersInnerOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FarcasterManifestTriggersInnerOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["id"] = o.Id
	toSerialize["url"] = o.Url
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

func (o *FarcasterManifestTriggersInnerOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"id",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFarcasterManifestTriggersInnerOneOf1 := _FarcasterManifestTriggersInnerOneOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFarcasterManifestTriggersInnerOneOf1)

	if err != nil {
		return err
	}

	*o = FarcasterManifestTriggersInnerOneOf1(varFarcasterManifestTriggersInnerOneOf1)

	return err
}

type NullableFarcasterManifestTriggersInnerOneOf1 struct {
	value *FarcasterManifestTriggersInnerOneOf1
	isSet bool
}

func (v NullableFarcasterManifestTriggersInnerOneOf1) Get() *FarcasterManifestTriggersInnerOneOf1 {
	return v.value
}

func (v *NullableFarcasterManifestTriggersInnerOneOf1) Set(val *FarcasterManifestTriggersInnerOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableFarcasterManifestTriggersInnerOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableFarcasterManifestTriggersInnerOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFarcasterManifestTriggersInnerOneOf1(val *FarcasterManifestTriggersInnerOneOf1) *NullableFarcasterManifestTriggersInnerOneOf1 {
	return &NullableFarcasterManifestTriggersInnerOneOf1{value: val, isSet: true}
}

func (v NullableFarcasterManifestTriggersInnerOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFarcasterManifestTriggersInnerOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


