/*
Farcaster API V2

The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details. 

API version: 2.33.1
Contact: team@neynar.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BulkUsersByAddressResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkUsersByAddressResponse{}

// BulkUsersByAddressResponse struct for BulkUsersByAddressResponse
type BulkUsersByAddressResponse struct {
	AdditionalProperties map[string]interface{}
}

type _BulkUsersByAddressResponse BulkUsersByAddressResponse

// NewBulkUsersByAddressResponse instantiates a new BulkUsersByAddressResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkUsersByAddressResponse() *BulkUsersByAddressResponse {
	this := BulkUsersByAddressResponse{}
	return &this
}

// NewBulkUsersByAddressResponseWithDefaults instantiates a new BulkUsersByAddressResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkUsersByAddressResponseWithDefaults() *BulkUsersByAddressResponse {
	this := BulkUsersByAddressResponse{}
	return &this
}

func (o BulkUsersByAddressResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkUsersByAddressResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BulkUsersByAddressResponse) UnmarshalJSON(data []byte) (err error) {
	varBulkUsersByAddressResponse := _BulkUsersByAddressResponse{}

	err = json.Unmarshal(data, &varBulkUsersByAddressResponse)

	if err != nil {
		return err
	}

	*o = BulkUsersByAddressResponse(varBulkUsersByAddressResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBulkUsersByAddressResponse struct {
	value BulkUsersByAddressResponse
	isSet bool
}

func (v NullableBulkUsersByAddressResponse) Get() BulkUsersByAddressResponse {
	return v.value
}

func (v *NullableBulkUsersByAddressResponse) Set(val BulkUsersByAddressResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkUsersByAddressResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkUsersByAddressResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkUsersByAddressResponse(val BulkUsersByAddressResponse) *NullableBulkUsersByAddressResponse {
	return &NullableBulkUsersByAddressResponse{value: val, isSet: true}
}

func (v NullableBulkUsersByAddressResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkUsersByAddressResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


