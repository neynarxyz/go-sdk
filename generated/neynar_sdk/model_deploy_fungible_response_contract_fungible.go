/*
Farcaster API V2

The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.

API version: 2.42.3
Contact: team@neynar.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package neynar_sdk

import (
	"encoding/json"
)

// checks if the DeployFungibleResponseContractFungible type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeployFungibleResponseContractFungible{}

// DeployFungibleResponseContractFungible struct for DeployFungibleResponseContractFungible
type DeployFungibleResponseContractFungible struct {
	Object *string `json:"object,omitempty"`
	// Name of the token
	Name *string `json:"name,omitempty"`
	// Symbol of the token
	Symbol *string `json:"symbol,omitempty"`
	// URI of the token media
	Media *string `json:"media,omitempty"`
	// Contract address of the token
	Address *string `json:"address,omitempty"`
	// Decimal precision of the token
	Decimals *int32 `json:"decimals,omitempty"`
}

// NewDeployFungibleResponseContractFungible instantiates a new DeployFungibleResponseContractFungible object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployFungibleResponseContractFungible() *DeployFungibleResponseContractFungible {
	this := DeployFungibleResponseContractFungible{}
	return &this
}

// NewDeployFungibleResponseContractFungibleWithDefaults instantiates a new DeployFungibleResponseContractFungible object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployFungibleResponseContractFungibleWithDefaults() *DeployFungibleResponseContractFungible {
	this := DeployFungibleResponseContractFungible{}
	return &this
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *DeployFungibleResponseContractFungible) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployFungibleResponseContractFungible) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *DeployFungibleResponseContractFungible) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *DeployFungibleResponseContractFungible) SetObject(v string) {
	o.Object = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DeployFungibleResponseContractFungible) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployFungibleResponseContractFungible) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DeployFungibleResponseContractFungible) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DeployFungibleResponseContractFungible) SetName(v string) {
	o.Name = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *DeployFungibleResponseContractFungible) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployFungibleResponseContractFungible) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *DeployFungibleResponseContractFungible) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *DeployFungibleResponseContractFungible) SetSymbol(v string) {
	o.Symbol = &v
}

// GetMedia returns the Media field value if set, zero value otherwise.
func (o *DeployFungibleResponseContractFungible) GetMedia() string {
	if o == nil || IsNil(o.Media) {
		var ret string
		return ret
	}
	return *o.Media
}

// GetMediaOk returns a tuple with the Media field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployFungibleResponseContractFungible) GetMediaOk() (*string, bool) {
	if o == nil || IsNil(o.Media) {
		return nil, false
	}
	return o.Media, true
}

// HasMedia returns a boolean if a field has been set.
func (o *DeployFungibleResponseContractFungible) HasMedia() bool {
	if o != nil && !IsNil(o.Media) {
		return true
	}

	return false
}

// SetMedia gets a reference to the given string and assigns it to the Media field.
func (o *DeployFungibleResponseContractFungible) SetMedia(v string) {
	o.Media = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *DeployFungibleResponseContractFungible) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployFungibleResponseContractFungible) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *DeployFungibleResponseContractFungible) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *DeployFungibleResponseContractFungible) SetAddress(v string) {
	o.Address = &v
}

// GetDecimals returns the Decimals field value if set, zero value otherwise.
func (o *DeployFungibleResponseContractFungible) GetDecimals() int32 {
	if o == nil || IsNil(o.Decimals) {
		var ret int32
		return ret
	}
	return *o.Decimals
}

// GetDecimalsOk returns a tuple with the Decimals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployFungibleResponseContractFungible) GetDecimalsOk() (*int32, bool) {
	if o == nil || IsNil(o.Decimals) {
		return nil, false
	}
	return o.Decimals, true
}

// HasDecimals returns a boolean if a field has been set.
func (o *DeployFungibleResponseContractFungible) HasDecimals() bool {
	if o != nil && !IsNil(o.Decimals) {
		return true
	}

	return false
}

// SetDecimals gets a reference to the given int32 and assigns it to the Decimals field.
func (o *DeployFungibleResponseContractFungible) SetDecimals(v int32) {
	o.Decimals = &v
}

func (o DeployFungibleResponseContractFungible) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeployFungibleResponseContractFungible) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.Media) {
		toSerialize["media"] = o.Media
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Decimals) {
		toSerialize["decimals"] = o.Decimals
	}
	return toSerialize, nil
}

type NullableDeployFungibleResponseContractFungible struct {
	value *DeployFungibleResponseContractFungible
	isSet bool
}

func (v NullableDeployFungibleResponseContractFungible) Get() *DeployFungibleResponseContractFungible {
	return v.value
}

func (v *NullableDeployFungibleResponseContractFungible) Set(val *DeployFungibleResponseContractFungible) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployFungibleResponseContractFungible) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployFungibleResponseContractFungible) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployFungibleResponseContractFungible(val *DeployFungibleResponseContractFungible) *NullableDeployFungibleResponseContractFungible {
	return &NullableDeployFungibleResponseContractFungible{value: val, isSet: true}
}

func (v NullableDeployFungibleResponseContractFungible) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployFungibleResponseContractFungible) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
