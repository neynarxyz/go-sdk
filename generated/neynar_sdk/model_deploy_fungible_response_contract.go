/*
Farcaster API V2

The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.

API version: 2.42.0
Contact: team@neynar.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package neynar_sdk

import (
	"encoding/json"
)

// checks if the DeployFungibleResponseContract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeployFungibleResponseContract{}

// DeployFungibleResponseContract struct for DeployFungibleResponseContract
type DeployFungibleResponseContract struct {
	Fungible *DeployFungibleResponseContractFungible `json:"fungible,omitempty"`
}

// NewDeployFungibleResponseContract instantiates a new DeployFungibleResponseContract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployFungibleResponseContract() *DeployFungibleResponseContract {
	this := DeployFungibleResponseContract{}
	return &this
}

// NewDeployFungibleResponseContractWithDefaults instantiates a new DeployFungibleResponseContract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployFungibleResponseContractWithDefaults() *DeployFungibleResponseContract {
	this := DeployFungibleResponseContract{}
	return &this
}

// GetFungible returns the Fungible field value if set, zero value otherwise.
func (o *DeployFungibleResponseContract) GetFungible() DeployFungibleResponseContractFungible {
	if o == nil || IsNil(o.Fungible) {
		var ret DeployFungibleResponseContractFungible
		return ret
	}
	return *o.Fungible
}

// GetFungibleOk returns a tuple with the Fungible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployFungibleResponseContract) GetFungibleOk() (*DeployFungibleResponseContractFungible, bool) {
	if o == nil || IsNil(o.Fungible) {
		return nil, false
	}
	return o.Fungible, true
}

// HasFungible returns a boolean if a field has been set.
func (o *DeployFungibleResponseContract) HasFungible() bool {
	if o != nil && !IsNil(o.Fungible) {
		return true
	}

	return false
}

// SetFungible gets a reference to the given DeployFungibleResponseContractFungible and assigns it to the Fungible field.
func (o *DeployFungibleResponseContract) SetFungible(v DeployFungibleResponseContractFungible) {
	o.Fungible = &v
}

func (o DeployFungibleResponseContract) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeployFungibleResponseContract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fungible) {
		toSerialize["fungible"] = o.Fungible
	}
	return toSerialize, nil
}

type NullableDeployFungibleResponseContract struct {
	value *DeployFungibleResponseContract
	isSet bool
}

func (v NullableDeployFungibleResponseContract) Get() *DeployFungibleResponseContract {
	return v.value
}

func (v *NullableDeployFungibleResponseContract) Set(val *DeployFungibleResponseContract) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployFungibleResponseContract) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployFungibleResponseContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployFungibleResponseContract(val *DeployFungibleResponseContract) *NullableDeployFungibleResponseContract {
	return &NullableDeployFungibleResponseContract{value: val, isSet: true}
}

func (v NullableDeployFungibleResponseContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployFungibleResponseContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
