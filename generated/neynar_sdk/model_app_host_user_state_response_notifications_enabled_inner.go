/*
Neynar API

The Neynar API allows you to interact with the Farcaster protocol among other things. See the [Neynar docs](https://docs.neynar.com/reference) for more details.

API version: 3.0.1
Contact: team@neynar.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package neynar_sdk

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the AppHostUserStateResponseNotificationsEnabledInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppHostUserStateResponseNotificationsEnabledInner{}

// AppHostUserStateResponseNotificationsEnabledInner struct for AppHostUserStateResponseNotificationsEnabledInner
type AppHostUserStateResponseNotificationsEnabledInner struct {
	// Domain of the mini app
	Domain string `json:"domain"`
	// Status of notifications for this domain (usually 'valid')
	Status string `json:"status"`
	// When the notification preference was last updated
	UpdatedAt time.Time `json:"updated_at"`
}

type _AppHostUserStateResponseNotificationsEnabledInner AppHostUserStateResponseNotificationsEnabledInner

// NewAppHostUserStateResponseNotificationsEnabledInner instantiates a new AppHostUserStateResponseNotificationsEnabledInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppHostUserStateResponseNotificationsEnabledInner(domain string, status string, updatedAt time.Time) *AppHostUserStateResponseNotificationsEnabledInner {
	this := AppHostUserStateResponseNotificationsEnabledInner{}
	this.Domain = domain
	this.Status = status
	this.UpdatedAt = updatedAt
	return &this
}

// NewAppHostUserStateResponseNotificationsEnabledInnerWithDefaults instantiates a new AppHostUserStateResponseNotificationsEnabledInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppHostUserStateResponseNotificationsEnabledInnerWithDefaults() *AppHostUserStateResponseNotificationsEnabledInner {
	this := AppHostUserStateResponseNotificationsEnabledInner{}
	return &this
}

// GetDomain returns the Domain field value
func (o *AppHostUserStateResponseNotificationsEnabledInner) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *AppHostUserStateResponseNotificationsEnabledInner) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *AppHostUserStateResponseNotificationsEnabledInner) SetDomain(v string) {
	o.Domain = v
}

// GetStatus returns the Status field value
func (o *AppHostUserStateResponseNotificationsEnabledInner) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AppHostUserStateResponseNotificationsEnabledInner) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AppHostUserStateResponseNotificationsEnabledInner) SetStatus(v string) {
	o.Status = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *AppHostUserStateResponseNotificationsEnabledInner) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *AppHostUserStateResponseNotificationsEnabledInner) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *AppHostUserStateResponseNotificationsEnabledInner) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o AppHostUserStateResponseNotificationsEnabledInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppHostUserStateResponseNotificationsEnabledInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["domain"] = o.Domain
	toSerialize["status"] = o.Status
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *AppHostUserStateResponseNotificationsEnabledInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"domain",
		"status",
		"updated_at",
	}

	// defaultValueFuncMap captures the default values for required properties.
	// These values are used when required properties are missing from the payload.
	defaultValueFuncMap := map[string]func() interface{}{}
	var defaultValueApplied bool
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			if _, ok := defaultValueFuncMap[requiredProperty]; ok {
				allProperties[requiredProperty] = defaultValueFuncMap[requiredProperty]()
				defaultValueApplied = true
			}
		}
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	if defaultValueApplied {
		data, err = json.Marshal(allProperties)
		if err != nil {
			return err
		}
	}
	varAppHostUserStateResponseNotificationsEnabledInner := _AppHostUserStateResponseNotificationsEnabledInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAppHostUserStateResponseNotificationsEnabledInner)

	if err != nil {
		return err
	}

	*o = AppHostUserStateResponseNotificationsEnabledInner(varAppHostUserStateResponseNotificationsEnabledInner)

	return err
}

type NullableAppHostUserStateResponseNotificationsEnabledInner struct {
	value *AppHostUserStateResponseNotificationsEnabledInner
	isSet bool
}

func (v NullableAppHostUserStateResponseNotificationsEnabledInner) Get() *AppHostUserStateResponseNotificationsEnabledInner {
	return v.value
}

func (v *NullableAppHostUserStateResponseNotificationsEnabledInner) Set(val *AppHostUserStateResponseNotificationsEnabledInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAppHostUserStateResponseNotificationsEnabledInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAppHostUserStateResponseNotificationsEnabledInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppHostUserStateResponseNotificationsEnabledInner(val *AppHostUserStateResponseNotificationsEnabledInner) *NullableAppHostUserStateResponseNotificationsEnabledInner {
	return &NullableAppHostUserStateResponseNotificationsEnabledInner{value: val, isSet: true}
}

func (v NullableAppHostUserStateResponseNotificationsEnabledInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppHostUserStateResponseNotificationsEnabledInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
