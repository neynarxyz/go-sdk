/*
Neynar API

The Neynar API allows you to interact with the Farcaster protocol among other things. See the [Neynar docs](https://docs.neynar.com/reference) for more details.

API version: 3.0.1
Contact: team@neynar.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package neynar_sdk

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GetNotificationCampaignStats200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNotificationCampaignStats200Response{}

// GetNotificationCampaignStats200Response struct for GetNotificationCampaignStats200Response
type GetNotificationCampaignStats200Response struct {
	NotificationCampaigns []GetNotificationCampaignStats200ResponseNotificationCampaignsInner `json:"notificationCampaigns"`
	Next                  NextCursor                                                          `json:"next"`
}

type _GetNotificationCampaignStats200Response GetNotificationCampaignStats200Response

// NewGetNotificationCampaignStats200Response instantiates a new GetNotificationCampaignStats200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNotificationCampaignStats200Response(notificationCampaigns []GetNotificationCampaignStats200ResponseNotificationCampaignsInner, next NextCursor) *GetNotificationCampaignStats200Response {
	this := GetNotificationCampaignStats200Response{}
	this.NotificationCampaigns = notificationCampaigns
	this.Next = next
	return &this
}

// NewGetNotificationCampaignStats200ResponseWithDefaults instantiates a new GetNotificationCampaignStats200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNotificationCampaignStats200ResponseWithDefaults() *GetNotificationCampaignStats200Response {
	this := GetNotificationCampaignStats200Response{}
	return &this
}

// GetNotificationCampaigns returns the NotificationCampaigns field value
func (o *GetNotificationCampaignStats200Response) GetNotificationCampaigns() []GetNotificationCampaignStats200ResponseNotificationCampaignsInner {
	if o == nil {
		var ret []GetNotificationCampaignStats200ResponseNotificationCampaignsInner
		return ret
	}

	return o.NotificationCampaigns
}

// GetNotificationCampaignsOk returns a tuple with the NotificationCampaigns field value
// and a boolean to check if the value has been set.
func (o *GetNotificationCampaignStats200Response) GetNotificationCampaignsOk() ([]GetNotificationCampaignStats200ResponseNotificationCampaignsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.NotificationCampaigns, true
}

// SetNotificationCampaigns sets field value
func (o *GetNotificationCampaignStats200Response) SetNotificationCampaigns(v []GetNotificationCampaignStats200ResponseNotificationCampaignsInner) {
	o.NotificationCampaigns = v
}

// GetNext returns the Next field value
func (o *GetNotificationCampaignStats200Response) GetNext() NextCursor {
	if o == nil {
		var ret NextCursor
		return ret
	}

	return o.Next
}

// GetNextOk returns a tuple with the Next field value
// and a boolean to check if the value has been set.
func (o *GetNotificationCampaignStats200Response) GetNextOk() (*NextCursor, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Next, true
}

// SetNext sets field value
func (o *GetNotificationCampaignStats200Response) SetNext(v NextCursor) {
	o.Next = v
}

func (o GetNotificationCampaignStats200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNotificationCampaignStats200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["notificationCampaigns"] = o.NotificationCampaigns
	toSerialize["next"] = o.Next
	return toSerialize, nil
}

func (o *GetNotificationCampaignStats200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"notificationCampaigns",
		"next",
	}

	// defaultValueFuncMap captures the default values for required properties.
	// These values are used when required properties are missing from the payload.
	defaultValueFuncMap := map[string]func() interface{}{}
	var defaultValueApplied bool
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			if _, ok := defaultValueFuncMap[requiredProperty]; ok {
				allProperties[requiredProperty] = defaultValueFuncMap[requiredProperty]()
				defaultValueApplied = true
			}
		}
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	if defaultValueApplied {
		data, err = json.Marshal(allProperties)
		if err != nil {
			return err
		}
	}
	varGetNotificationCampaignStats200Response := _GetNotificationCampaignStats200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetNotificationCampaignStats200Response)

	if err != nil {
		return err
	}

	*o = GetNotificationCampaignStats200Response(varGetNotificationCampaignStats200Response)

	return err
}

type NullableGetNotificationCampaignStats200Response struct {
	value *GetNotificationCampaignStats200Response
	isSet bool
}

func (v NullableGetNotificationCampaignStats200Response) Get() *GetNotificationCampaignStats200Response {
	return v.value
}

func (v *NullableGetNotificationCampaignStats200Response) Set(val *GetNotificationCampaignStats200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNotificationCampaignStats200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNotificationCampaignStats200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNotificationCampaignStats200Response(val *GetNotificationCampaignStats200Response) *NullableGetNotificationCampaignStats200Response {
	return &NullableGetNotificationCampaignStats200Response{value: val, isSet: true}
}

func (v NullableGetNotificationCampaignStats200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNotificationCampaignStats200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
