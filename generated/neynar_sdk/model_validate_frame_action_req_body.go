/*
Farcaster API V2

The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.

API version: 2.41.1
Contact: team@neynar.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package neynar_sdk

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ValidateFrameActionReqBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidateFrameActionReqBody{}

// ValidateFrameActionReqBody struct for ValidateFrameActionReqBody
type ValidateFrameActionReqBody struct {
	// Hexadecimal string of message bytes.
	MessageBytesInHex string `json:"message_bytes_in_hex"`
	// Adds viewer_context inside the cast object to indicate whether the interactor reacted to the cast housing the mini app.
	CastReactionContext *bool `json:"cast_reaction_context,omitempty"`
	// Adds viewer_context inside the user (interactor) object to indicate whether the interactor follows or is followed by the cast author.
	FollowContext *bool `json:"follow_context,omitempty"`
	// Adds context about the app used by the user inside `frame.action`.
	SignerContext *bool `json:"signer_context,omitempty"`
	// Adds context about the channel that the cast belongs to inside of the cast object.
	ChannelFollowContext *bool `json:"channel_follow_context,omitempty"`
}

type _ValidateFrameActionReqBody ValidateFrameActionReqBody

// NewValidateFrameActionReqBody instantiates a new ValidateFrameActionReqBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidateFrameActionReqBody(messageBytesInHex string) *ValidateFrameActionReqBody {
	this := ValidateFrameActionReqBody{}
	this.MessageBytesInHex = messageBytesInHex
	var castReactionContext bool = true
	this.CastReactionContext = &castReactionContext
	var followContext bool = false
	this.FollowContext = &followContext
	var signerContext bool = false
	this.SignerContext = &signerContext
	var channelFollowContext bool = false
	this.ChannelFollowContext = &channelFollowContext
	return &this
}

// NewValidateFrameActionReqBodyWithDefaults instantiates a new ValidateFrameActionReqBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidateFrameActionReqBodyWithDefaults() *ValidateFrameActionReqBody {
	this := ValidateFrameActionReqBody{}
	var castReactionContext bool = true
	this.CastReactionContext = &castReactionContext
	var followContext bool = false
	this.FollowContext = &followContext
	var signerContext bool = false
	this.SignerContext = &signerContext
	var channelFollowContext bool = false
	this.ChannelFollowContext = &channelFollowContext
	return &this
}

// GetMessageBytesInHex returns the MessageBytesInHex field value
func (o *ValidateFrameActionReqBody) GetMessageBytesInHex() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageBytesInHex
}

// GetMessageBytesInHexOk returns a tuple with the MessageBytesInHex field value
// and a boolean to check if the value has been set.
func (o *ValidateFrameActionReqBody) GetMessageBytesInHexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageBytesInHex, true
}

// SetMessageBytesInHex sets field value
func (o *ValidateFrameActionReqBody) SetMessageBytesInHex(v string) {
	o.MessageBytesInHex = v
}

// GetCastReactionContext returns the CastReactionContext field value if set, zero value otherwise.
func (o *ValidateFrameActionReqBody) GetCastReactionContext() bool {
	if o == nil || IsNil(o.CastReactionContext) {
		var ret bool
		return ret
	}
	return *o.CastReactionContext
}

// GetCastReactionContextOk returns a tuple with the CastReactionContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateFrameActionReqBody) GetCastReactionContextOk() (*bool, bool) {
	if o == nil || IsNil(o.CastReactionContext) {
		return nil, false
	}
	return o.CastReactionContext, true
}

// HasCastReactionContext returns a boolean if a field has been set.
func (o *ValidateFrameActionReqBody) HasCastReactionContext() bool {
	if o != nil && !IsNil(o.CastReactionContext) {
		return true
	}

	return false
}

// SetCastReactionContext gets a reference to the given bool and assigns it to the CastReactionContext field.
func (o *ValidateFrameActionReqBody) SetCastReactionContext(v bool) {
	o.CastReactionContext = &v
}

// GetFollowContext returns the FollowContext field value if set, zero value otherwise.
func (o *ValidateFrameActionReqBody) GetFollowContext() bool {
	if o == nil || IsNil(o.FollowContext) {
		var ret bool
		return ret
	}
	return *o.FollowContext
}

// GetFollowContextOk returns a tuple with the FollowContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateFrameActionReqBody) GetFollowContextOk() (*bool, bool) {
	if o == nil || IsNil(o.FollowContext) {
		return nil, false
	}
	return o.FollowContext, true
}

// HasFollowContext returns a boolean if a field has been set.
func (o *ValidateFrameActionReqBody) HasFollowContext() bool {
	if o != nil && !IsNil(o.FollowContext) {
		return true
	}

	return false
}

// SetFollowContext gets a reference to the given bool and assigns it to the FollowContext field.
func (o *ValidateFrameActionReqBody) SetFollowContext(v bool) {
	o.FollowContext = &v
}

// GetSignerContext returns the SignerContext field value if set, zero value otherwise.
func (o *ValidateFrameActionReqBody) GetSignerContext() bool {
	if o == nil || IsNil(o.SignerContext) {
		var ret bool
		return ret
	}
	return *o.SignerContext
}

// GetSignerContextOk returns a tuple with the SignerContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateFrameActionReqBody) GetSignerContextOk() (*bool, bool) {
	if o == nil || IsNil(o.SignerContext) {
		return nil, false
	}
	return o.SignerContext, true
}

// HasSignerContext returns a boolean if a field has been set.
func (o *ValidateFrameActionReqBody) HasSignerContext() bool {
	if o != nil && !IsNil(o.SignerContext) {
		return true
	}

	return false
}

// SetSignerContext gets a reference to the given bool and assigns it to the SignerContext field.
func (o *ValidateFrameActionReqBody) SetSignerContext(v bool) {
	o.SignerContext = &v
}

// GetChannelFollowContext returns the ChannelFollowContext field value if set, zero value otherwise.
func (o *ValidateFrameActionReqBody) GetChannelFollowContext() bool {
	if o == nil || IsNil(o.ChannelFollowContext) {
		var ret bool
		return ret
	}
	return *o.ChannelFollowContext
}

// GetChannelFollowContextOk returns a tuple with the ChannelFollowContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateFrameActionReqBody) GetChannelFollowContextOk() (*bool, bool) {
	if o == nil || IsNil(o.ChannelFollowContext) {
		return nil, false
	}
	return o.ChannelFollowContext, true
}

// HasChannelFollowContext returns a boolean if a field has been set.
func (o *ValidateFrameActionReqBody) HasChannelFollowContext() bool {
	if o != nil && !IsNil(o.ChannelFollowContext) {
		return true
	}

	return false
}

// SetChannelFollowContext gets a reference to the given bool and assigns it to the ChannelFollowContext field.
func (o *ValidateFrameActionReqBody) SetChannelFollowContext(v bool) {
	o.ChannelFollowContext = &v
}

func (o ValidateFrameActionReqBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidateFrameActionReqBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message_bytes_in_hex"] = o.MessageBytesInHex
	if !IsNil(o.CastReactionContext) {
		toSerialize["cast_reaction_context"] = o.CastReactionContext
	}
	if !IsNil(o.FollowContext) {
		toSerialize["follow_context"] = o.FollowContext
	}
	if !IsNil(o.SignerContext) {
		toSerialize["signer_context"] = o.SignerContext
	}
	if !IsNil(o.ChannelFollowContext) {
		toSerialize["channel_follow_context"] = o.ChannelFollowContext
	}
	return toSerialize, nil
}

func (o *ValidateFrameActionReqBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message_bytes_in_hex",
	}

	// defaultValueFuncMap captures the default values for required properties.
	// These values are used when required properties are missing from the payload.
	defaultValueFuncMap := map[string]func() interface{}{}
	var defaultValueApplied bool
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			if _, ok := defaultValueFuncMap[requiredProperty]; ok {
				allProperties[requiredProperty] = defaultValueFuncMap[requiredProperty]()
				defaultValueApplied = true
			}
		}
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	if defaultValueApplied {
		data, err = json.Marshal(allProperties)
		if err != nil {
			return err
		}
	}
	varValidateFrameActionReqBody := _ValidateFrameActionReqBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varValidateFrameActionReqBody)

	if err != nil {
		return err
	}

	*o = ValidateFrameActionReqBody(varValidateFrameActionReqBody)

	return err
}

type NullableValidateFrameActionReqBody struct {
	value *ValidateFrameActionReqBody
	isSet bool
}

func (v NullableValidateFrameActionReqBody) Get() *ValidateFrameActionReqBody {
	return v.value
}

func (v *NullableValidateFrameActionReqBody) Set(val *ValidateFrameActionReqBody) {
	v.value = val
	v.isSet = true
}

func (v NullableValidateFrameActionReqBody) IsSet() bool {
	return v.isSet
}

func (v *NullableValidateFrameActionReqBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidateFrameActionReqBody(val *ValidateFrameActionReqBody) *NullableValidateFrameActionReqBody {
	return &NullableValidateFrameActionReqBody{value: val, isSet: true}
}

func (v NullableValidateFrameActionReqBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidateFrameActionReqBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
