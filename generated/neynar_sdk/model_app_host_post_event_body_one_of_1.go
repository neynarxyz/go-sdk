/*
Neynar API

The Neynar API allows you to interact with the Farcaster protocol among other things. See the [Neynar docs](https://docs.neynar.com/reference) for more details.

API version: 3.0.1
Contact: team@neynar.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package neynar_sdk

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AppHostPostEventBodyOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppHostPostEventBodyOneOf1{}

// AppHostPostEventBodyOneOf1 struct for AppHostPostEventBodyOneOf1
type AppHostPostEventBodyOneOf1 struct {
	// UUID of the signer. `signer_uuid` is paired with API key, can't use a `uuid` made with a different API key.
	SignerUuid string `json:"signer_uuid"`
	// Domain of the mini app
	AppDomain string `json:"app_domain"`
	// The unique identifier of a farcaster user or app (unsigned integer)
	Fid   int32            `json:"fid"`
	Event AppHostEventType `json:"event"`
}

type _AppHostPostEventBodyOneOf1 AppHostPostEventBodyOneOf1

// NewAppHostPostEventBodyOneOf1 instantiates a new AppHostPostEventBodyOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppHostPostEventBodyOneOf1(signerUuid string, appDomain string, fid int32, event AppHostEventType) *AppHostPostEventBodyOneOf1 {
	this := AppHostPostEventBodyOneOf1{}
	this.SignerUuid = signerUuid
	this.AppDomain = appDomain
	this.Fid = fid
	this.Event = event
	return &this
}

// NewAppHostPostEventBodyOneOf1WithDefaults instantiates a new AppHostPostEventBodyOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppHostPostEventBodyOneOf1WithDefaults() *AppHostPostEventBodyOneOf1 {
	this := AppHostPostEventBodyOneOf1{}
	return &this
}

// GetSignerUuid returns the SignerUuid field value
func (o *AppHostPostEventBodyOneOf1) GetSignerUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignerUuid
}

// GetSignerUuidOk returns a tuple with the SignerUuid field value
// and a boolean to check if the value has been set.
func (o *AppHostPostEventBodyOneOf1) GetSignerUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignerUuid, true
}

// SetSignerUuid sets field value
func (o *AppHostPostEventBodyOneOf1) SetSignerUuid(v string) {
	o.SignerUuid = v
}

// GetAppDomain returns the AppDomain field value
func (o *AppHostPostEventBodyOneOf1) GetAppDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppDomain
}

// GetAppDomainOk returns a tuple with the AppDomain field value
// and a boolean to check if the value has been set.
func (o *AppHostPostEventBodyOneOf1) GetAppDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppDomain, true
}

// SetAppDomain sets field value
func (o *AppHostPostEventBodyOneOf1) SetAppDomain(v string) {
	o.AppDomain = v
}

// GetFid returns the Fid field value
func (o *AppHostPostEventBodyOneOf1) GetFid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Fid
}

// GetFidOk returns a tuple with the Fid field value
// and a boolean to check if the value has been set.
func (o *AppHostPostEventBodyOneOf1) GetFidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fid, true
}

// SetFid sets field value
func (o *AppHostPostEventBodyOneOf1) SetFid(v int32) {
	o.Fid = v
}

// GetEvent returns the Event field value
func (o *AppHostPostEventBodyOneOf1) GetEvent() AppHostEventType {
	if o == nil {
		var ret AppHostEventType
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *AppHostPostEventBodyOneOf1) GetEventOk() (*AppHostEventType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *AppHostPostEventBodyOneOf1) SetEvent(v AppHostEventType) {
	o.Event = v
}

func (o AppHostPostEventBodyOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppHostPostEventBodyOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["signer_uuid"] = o.SignerUuid
	toSerialize["app_domain"] = o.AppDomain
	toSerialize["fid"] = o.Fid
	toSerialize["event"] = o.Event
	return toSerialize, nil
}

func (o *AppHostPostEventBodyOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"signer_uuid",
		"app_domain",
		"fid",
		"event",
	}

	// defaultValueFuncMap captures the default values for required properties.
	// These values are used when required properties are missing from the payload.
	defaultValueFuncMap := map[string]func() interface{}{}
	var defaultValueApplied bool
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			if _, ok := defaultValueFuncMap[requiredProperty]; ok {
				allProperties[requiredProperty] = defaultValueFuncMap[requiredProperty]()
				defaultValueApplied = true
			}
		}
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	if defaultValueApplied {
		data, err = json.Marshal(allProperties)
		if err != nil {
			return err
		}
	}
	varAppHostPostEventBodyOneOf1 := _AppHostPostEventBodyOneOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAppHostPostEventBodyOneOf1)

	if err != nil {
		return err
	}

	*o = AppHostPostEventBodyOneOf1(varAppHostPostEventBodyOneOf1)

	return err
}

type NullableAppHostPostEventBodyOneOf1 struct {
	value *AppHostPostEventBodyOneOf1
	isSet bool
}

func (v NullableAppHostPostEventBodyOneOf1) Get() *AppHostPostEventBodyOneOf1 {
	return v.value
}

func (v *NullableAppHostPostEventBodyOneOf1) Set(val *AppHostPostEventBodyOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableAppHostPostEventBodyOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableAppHostPostEventBodyOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppHostPostEventBodyOneOf1(val *AppHostPostEventBodyOneOf1) *NullableAppHostPostEventBodyOneOf1 {
	return &NullableAppHostPostEventBodyOneOf1{value: val, isSet: true}
}

func (v NullableAppHostPostEventBodyOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppHostPostEventBodyOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
