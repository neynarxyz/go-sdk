/*
Farcaster API V2

The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.

API version: 2.42.4
Contact: team@neynar.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package neynar_sdk

import (
	"encoding/json"
	"time"
)

// checks if the FrameNotificationTokensNotificationTokensInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FrameNotificationTokensNotificationTokensInner{}

// FrameNotificationTokensNotificationTokensInner struct for FrameNotificationTokensNotificationTokensInner
type FrameNotificationTokensNotificationTokensInner struct {
	Object *string `json:"object,omitempty"`
	Url    *string `json:"url,omitempty"`
	Token  *string `json:"token,omitempty"`
	Status *string `json:"status,omitempty"`
	// The unique identifier of a farcaster user (unsigned integer)
	Fid       *int32     `json:"fid,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewFrameNotificationTokensNotificationTokensInner instantiates a new FrameNotificationTokensNotificationTokensInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFrameNotificationTokensNotificationTokensInner() *FrameNotificationTokensNotificationTokensInner {
	this := FrameNotificationTokensNotificationTokensInner{}
	return &this
}

// NewFrameNotificationTokensNotificationTokensInnerWithDefaults instantiates a new FrameNotificationTokensNotificationTokensInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFrameNotificationTokensNotificationTokensInnerWithDefaults() *FrameNotificationTokensNotificationTokensInner {
	this := FrameNotificationTokensNotificationTokensInner{}
	return &this
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *FrameNotificationTokensNotificationTokensInner) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameNotificationTokensNotificationTokensInner) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *FrameNotificationTokensNotificationTokensInner) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *FrameNotificationTokensNotificationTokensInner) SetObject(v string) {
	o.Object = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *FrameNotificationTokensNotificationTokensInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameNotificationTokensNotificationTokensInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *FrameNotificationTokensNotificationTokensInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *FrameNotificationTokensNotificationTokensInner) SetUrl(v string) {
	o.Url = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *FrameNotificationTokensNotificationTokensInner) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameNotificationTokensNotificationTokensInner) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *FrameNotificationTokensNotificationTokensInner) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *FrameNotificationTokensNotificationTokensInner) SetToken(v string) {
	o.Token = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *FrameNotificationTokensNotificationTokensInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameNotificationTokensNotificationTokensInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *FrameNotificationTokensNotificationTokensInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *FrameNotificationTokensNotificationTokensInner) SetStatus(v string) {
	o.Status = &v
}

// GetFid returns the Fid field value if set, zero value otherwise.
func (o *FrameNotificationTokensNotificationTokensInner) GetFid() int32 {
	if o == nil || IsNil(o.Fid) {
		var ret int32
		return ret
	}
	return *o.Fid
}

// GetFidOk returns a tuple with the Fid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameNotificationTokensNotificationTokensInner) GetFidOk() (*int32, bool) {
	if o == nil || IsNil(o.Fid) {
		return nil, false
	}
	return o.Fid, true
}

// HasFid returns a boolean if a field has been set.
func (o *FrameNotificationTokensNotificationTokensInner) HasFid() bool {
	if o != nil && !IsNil(o.Fid) {
		return true
	}

	return false
}

// SetFid gets a reference to the given int32 and assigns it to the Fid field.
func (o *FrameNotificationTokensNotificationTokensInner) SetFid(v int32) {
	o.Fid = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FrameNotificationTokensNotificationTokensInner) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameNotificationTokensNotificationTokensInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FrameNotificationTokensNotificationTokensInner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *FrameNotificationTokensNotificationTokensInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *FrameNotificationTokensNotificationTokensInner) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameNotificationTokensNotificationTokensInner) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FrameNotificationTokensNotificationTokensInner) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *FrameNotificationTokensNotificationTokensInner) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o FrameNotificationTokensNotificationTokensInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FrameNotificationTokensNotificationTokensInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Fid) {
		toSerialize["fid"] = o.Fid
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableFrameNotificationTokensNotificationTokensInner struct {
	value *FrameNotificationTokensNotificationTokensInner
	isSet bool
}

func (v NullableFrameNotificationTokensNotificationTokensInner) Get() *FrameNotificationTokensNotificationTokensInner {
	return v.value
}

func (v *NullableFrameNotificationTokensNotificationTokensInner) Set(val *FrameNotificationTokensNotificationTokensInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFrameNotificationTokensNotificationTokensInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFrameNotificationTokensNotificationTokensInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrameNotificationTokensNotificationTokensInner(val *FrameNotificationTokensNotificationTokensInner) *NullableFrameNotificationTokensNotificationTokensInner {
	return &NullableFrameNotificationTokensNotificationTokensInner{value: val, isSet: true}
}

func (v NullableFrameNotificationTokensNotificationTokensInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrameNotificationTokensNotificationTokensInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
