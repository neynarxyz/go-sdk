/*
Neynar API

The Neynar API allows you to interact with the Farcaster protocol among other things. See the [Neynar docs](https://docs.neynar.com/reference) for more details.

API version: 3.0.1
Contact: team@neynar.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package neynar_sdk

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AppHostPostEventBodyOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppHostPostEventBodyOneOf{}

// AppHostPostEventBodyOneOf struct for AppHostPostEventBodyOneOf
type AppHostPostEventBodyOneOf struct {
	// JFS-signed message containing the event payload. The message must be properly signed and contain valid event information.
	SignedMessage string `json:"signed_message"`
	// Domain of the mini app
	AppDomain string `json:"app_domain"`
}

type _AppHostPostEventBodyOneOf AppHostPostEventBodyOneOf

// NewAppHostPostEventBodyOneOf instantiates a new AppHostPostEventBodyOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppHostPostEventBodyOneOf(signedMessage string, appDomain string) *AppHostPostEventBodyOneOf {
	this := AppHostPostEventBodyOneOf{}
	this.SignedMessage = signedMessage
	this.AppDomain = appDomain
	return &this
}

// NewAppHostPostEventBodyOneOfWithDefaults instantiates a new AppHostPostEventBodyOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppHostPostEventBodyOneOfWithDefaults() *AppHostPostEventBodyOneOf {
	this := AppHostPostEventBodyOneOf{}
	return &this
}

// GetSignedMessage returns the SignedMessage field value
func (o *AppHostPostEventBodyOneOf) GetSignedMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignedMessage
}

// GetSignedMessageOk returns a tuple with the SignedMessage field value
// and a boolean to check if the value has been set.
func (o *AppHostPostEventBodyOneOf) GetSignedMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignedMessage, true
}

// SetSignedMessage sets field value
func (o *AppHostPostEventBodyOneOf) SetSignedMessage(v string) {
	o.SignedMessage = v
}

// GetAppDomain returns the AppDomain field value
func (o *AppHostPostEventBodyOneOf) GetAppDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppDomain
}

// GetAppDomainOk returns a tuple with the AppDomain field value
// and a boolean to check if the value has been set.
func (o *AppHostPostEventBodyOneOf) GetAppDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppDomain, true
}

// SetAppDomain sets field value
func (o *AppHostPostEventBodyOneOf) SetAppDomain(v string) {
	o.AppDomain = v
}

func (o AppHostPostEventBodyOneOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppHostPostEventBodyOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["signed_message"] = o.SignedMessage
	toSerialize["app_domain"] = o.AppDomain
	return toSerialize, nil
}

func (o *AppHostPostEventBodyOneOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"signed_message",
		"app_domain",
	}

	// defaultValueFuncMap captures the default values for required properties.
	// These values are used when required properties are missing from the payload.
	defaultValueFuncMap := map[string]func() interface{}{}
	var defaultValueApplied bool
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			if _, ok := defaultValueFuncMap[requiredProperty]; ok {
				allProperties[requiredProperty] = defaultValueFuncMap[requiredProperty]()
				defaultValueApplied = true
			}
		}
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	if defaultValueApplied {
		data, err = json.Marshal(allProperties)
		if err != nil {
			return err
		}
	}
	varAppHostPostEventBodyOneOf := _AppHostPostEventBodyOneOf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAppHostPostEventBodyOneOf)

	if err != nil {
		return err
	}

	*o = AppHostPostEventBodyOneOf(varAppHostPostEventBodyOneOf)

	return err
}

type NullableAppHostPostEventBodyOneOf struct {
	value *AppHostPostEventBodyOneOf
	isSet bool
}

func (v NullableAppHostPostEventBodyOneOf) Get() *AppHostPostEventBodyOneOf {
	return v.value
}

func (v *NullableAppHostPostEventBodyOneOf) Set(val *AppHostPostEventBodyOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAppHostPostEventBodyOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAppHostPostEventBodyOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppHostPostEventBodyOneOf(val *AppHostPostEventBodyOneOf) *NullableAppHostPostEventBodyOneOf {
	return &NullableAppHostPostEventBodyOneOf{value: val, isSet: true}
}

func (v NullableAppHostPostEventBodyOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppHostPostEventBodyOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
