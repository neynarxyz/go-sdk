/*
Neynar API

The Neynar API allows you to interact with the Farcaster protocol among other things. See the [Neynar docs](https://docs.neynar.com/reference) for more details.

API version: 3.0.1
Contact: team@neynar.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package neynar_sdk

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PostCastReqBodyEmbedsOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostCastReqBodyEmbedsOneOf1{}

// PostCastReqBodyEmbedsOneOf1 struct for PostCastReqBodyEmbedsOneOf1
type PostCastReqBodyEmbedsOneOf1 struct {
	CastId PostCastReqBodyEmbedsCastIdProperties `json:"castId"`
}

type _PostCastReqBodyEmbedsOneOf1 PostCastReqBodyEmbedsOneOf1

// NewPostCastReqBodyEmbedsOneOf1 instantiates a new PostCastReqBodyEmbedsOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostCastReqBodyEmbedsOneOf1(castId PostCastReqBodyEmbedsCastIdProperties) *PostCastReqBodyEmbedsOneOf1 {
	this := PostCastReqBodyEmbedsOneOf1{}
	this.CastId = castId
	return &this
}

// NewPostCastReqBodyEmbedsOneOf1WithDefaults instantiates a new PostCastReqBodyEmbedsOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostCastReqBodyEmbedsOneOf1WithDefaults() *PostCastReqBodyEmbedsOneOf1 {
	this := PostCastReqBodyEmbedsOneOf1{}
	return &this
}

// GetCastId returns the CastId field value
func (o *PostCastReqBodyEmbedsOneOf1) GetCastId() PostCastReqBodyEmbedsCastIdProperties {
	if o == nil {
		var ret PostCastReqBodyEmbedsCastIdProperties
		return ret
	}

	return o.CastId
}

// GetCastIdOk returns a tuple with the CastId field value
// and a boolean to check if the value has been set.
func (o *PostCastReqBodyEmbedsOneOf1) GetCastIdOk() (*PostCastReqBodyEmbedsCastIdProperties, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CastId, true
}

// SetCastId sets field value
func (o *PostCastReqBodyEmbedsOneOf1) SetCastId(v PostCastReqBodyEmbedsCastIdProperties) {
	o.CastId = v
}

func (o PostCastReqBodyEmbedsOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostCastReqBodyEmbedsOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["castId"] = o.CastId
	return toSerialize, nil
}

func (o *PostCastReqBodyEmbedsOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"castId",
	}

	// defaultValueFuncMap captures the default values for required properties.
	// These values are used when required properties are missing from the payload.
	defaultValueFuncMap := map[string]func() interface{}{}
	var defaultValueApplied bool
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			if _, ok := defaultValueFuncMap[requiredProperty]; ok {
				allProperties[requiredProperty] = defaultValueFuncMap[requiredProperty]()
				defaultValueApplied = true
			}
		}
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	if defaultValueApplied {
		data, err = json.Marshal(allProperties)
		if err != nil {
			return err
		}
	}
	varPostCastReqBodyEmbedsOneOf1 := _PostCastReqBodyEmbedsOneOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostCastReqBodyEmbedsOneOf1)

	if err != nil {
		return err
	}

	*o = PostCastReqBodyEmbedsOneOf1(varPostCastReqBodyEmbedsOneOf1)

	return err
}

type NullablePostCastReqBodyEmbedsOneOf1 struct {
	value *PostCastReqBodyEmbedsOneOf1
	isSet bool
}

func (v NullablePostCastReqBodyEmbedsOneOf1) Get() *PostCastReqBodyEmbedsOneOf1 {
	return v.value
}

func (v *NullablePostCastReqBodyEmbedsOneOf1) Set(val *PostCastReqBodyEmbedsOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullablePostCastReqBodyEmbedsOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullablePostCastReqBodyEmbedsOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostCastReqBodyEmbedsOneOf1(val *PostCastReqBodyEmbedsOneOf1) *NullablePostCastReqBodyEmbedsOneOf1 {
	return &NullablePostCastReqBodyEmbedsOneOf1{value: val, isSet: true}
}

func (v NullablePostCastReqBodyEmbedsOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostCastReqBodyEmbedsOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
