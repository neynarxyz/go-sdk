/*
Farcaster API V2

The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.

API version: 2.37.0
Contact: team@neynar.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package neynar_sdk

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// FarcasterManifestTriggersInner - struct for FarcasterManifestTriggersInner
type FarcasterManifestTriggersInner struct {
	FarcasterManifestTriggersInnerOneOf  *FarcasterManifestTriggersInnerOneOf
	FarcasterManifestTriggersInnerOneOf1 *FarcasterManifestTriggersInnerOneOf1
}

// FarcasterManifestTriggersInnerOneOfAsFarcasterManifestTriggersInner is a convenience function that returns FarcasterManifestTriggersInnerOneOf wrapped in FarcasterManifestTriggersInner
func FarcasterManifestTriggersInnerOneOfAsFarcasterManifestTriggersInner(v *FarcasterManifestTriggersInnerOneOf) FarcasterManifestTriggersInner {
	return FarcasterManifestTriggersInner{
		FarcasterManifestTriggersInnerOneOf: v,
	}
}

// FarcasterManifestTriggersInnerOneOf1AsFarcasterManifestTriggersInner is a convenience function that returns FarcasterManifestTriggersInnerOneOf1 wrapped in FarcasterManifestTriggersInner
func FarcasterManifestTriggersInnerOneOf1AsFarcasterManifestTriggersInner(v *FarcasterManifestTriggersInnerOneOf1) FarcasterManifestTriggersInner {
	return FarcasterManifestTriggersInner{
		FarcasterManifestTriggersInnerOneOf1: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *FarcasterManifestTriggersInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into FarcasterManifestTriggersInnerOneOf
	err = newStrictDecoder(data).Decode(&dst.FarcasterManifestTriggersInnerOneOf)
	if err == nil {
		jsonFarcasterManifestTriggersInnerOneOf, _ := json.Marshal(dst.FarcasterManifestTriggersInnerOneOf)
		if string(jsonFarcasterManifestTriggersInnerOneOf) == "{}" { // empty struct
			dst.FarcasterManifestTriggersInnerOneOf = nil
		} else {
			if err = validator.Validate(dst.FarcasterManifestTriggersInnerOneOf); err != nil {
				dst.FarcasterManifestTriggersInnerOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.FarcasterManifestTriggersInnerOneOf = nil
	}

	// try to unmarshal data into FarcasterManifestTriggersInnerOneOf1
	err = newStrictDecoder(data).Decode(&dst.FarcasterManifestTriggersInnerOneOf1)
	if err == nil {
		jsonFarcasterManifestTriggersInnerOneOf1, _ := json.Marshal(dst.FarcasterManifestTriggersInnerOneOf1)
		if string(jsonFarcasterManifestTriggersInnerOneOf1) == "{}" { // empty struct
			dst.FarcasterManifestTriggersInnerOneOf1 = nil
		} else {
			if err = validator.Validate(dst.FarcasterManifestTriggersInnerOneOf1); err != nil {
				dst.FarcasterManifestTriggersInnerOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.FarcasterManifestTriggersInnerOneOf1 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.FarcasterManifestTriggersInnerOneOf = nil
		dst.FarcasterManifestTriggersInnerOneOf1 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(FarcasterManifestTriggersInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(FarcasterManifestTriggersInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src FarcasterManifestTriggersInner) MarshalJSON() ([]byte, error) {
	if src.FarcasterManifestTriggersInnerOneOf != nil {
		return json.Marshal(&src.FarcasterManifestTriggersInnerOneOf)
	}

	if src.FarcasterManifestTriggersInnerOneOf1 != nil {
		return json.Marshal(&src.FarcasterManifestTriggersInnerOneOf1)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *FarcasterManifestTriggersInner) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.FarcasterManifestTriggersInnerOneOf != nil {
		return obj.FarcasterManifestTriggersInnerOneOf
	}

	if obj.FarcasterManifestTriggersInnerOneOf1 != nil {
		return obj.FarcasterManifestTriggersInnerOneOf1
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj FarcasterManifestTriggersInner) GetActualInstanceValue() interface{} {
	if obj.FarcasterManifestTriggersInnerOneOf != nil {
		return *obj.FarcasterManifestTriggersInnerOneOf
	}

	if obj.FarcasterManifestTriggersInnerOneOf1 != nil {
		return *obj.FarcasterManifestTriggersInnerOneOf1
	}

	// all schemas are nil
	return nil
}

type NullableFarcasterManifestTriggersInner struct {
	value *FarcasterManifestTriggersInner
	isSet bool
}

func (v NullableFarcasterManifestTriggersInner) Get() *FarcasterManifestTriggersInner {
	return v.value
}

func (v *NullableFarcasterManifestTriggersInner) Set(val *FarcasterManifestTriggersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFarcasterManifestTriggersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFarcasterManifestTriggersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFarcasterManifestTriggersInner(val *FarcasterManifestTriggersInner) *NullableFarcasterManifestTriggersInner {
	return &NullableFarcasterManifestTriggersInner{value: val, isSet: true}
}

func (v NullableFarcasterManifestTriggersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFarcasterManifestTriggersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
