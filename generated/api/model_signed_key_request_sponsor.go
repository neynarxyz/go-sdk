/*
Farcaster API V2

The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.

API version: 2.37.0
Contact: team@neynar.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package neynar_sdk

import (
	"encoding/json"
)

// checks if the SignedKeyRequestSponsor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignedKeyRequestSponsor{}

// SignedKeyRequestSponsor struct for SignedKeyRequestSponsor
type SignedKeyRequestSponsor struct {
	// The unique identifier of a farcaster user (unsigned integer)
	Fid *int32 `json:"fid,omitempty"`
	// Signature generated by the fid of the sponsor and the signature generated from signKeyRequest for the app.
	Signature *string `json:"signature,omitempty"`
	// Neynar will sponsor the signer if set to true. **Note: ** If sponsor.fid and sponsor.signature are provided along with sponsored_by_neynar set to true,  the sponsor.fid and sponsor.signature will be ignored.  Neynar will sponsor the signer on behalf of the user. The developer will get charged in compute units.
	SponsoredByNeynar *bool `json:"sponsored_by_neynar,omitempty"`
}

// NewSignedKeyRequestSponsor instantiates a new SignedKeyRequestSponsor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignedKeyRequestSponsor() *SignedKeyRequestSponsor {
	this := SignedKeyRequestSponsor{}
	return &this
}

// NewSignedKeyRequestSponsorWithDefaults instantiates a new SignedKeyRequestSponsor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignedKeyRequestSponsorWithDefaults() *SignedKeyRequestSponsor {
	this := SignedKeyRequestSponsor{}
	return &this
}

// GetFid returns the Fid field value if set, zero value otherwise.
func (o *SignedKeyRequestSponsor) GetFid() int32 {
	if o == nil || IsNil(o.Fid) {
		var ret int32
		return ret
	}
	return *o.Fid
}

// GetFidOk returns a tuple with the Fid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignedKeyRequestSponsor) GetFidOk() (*int32, bool) {
	if o == nil || IsNil(o.Fid) {
		return nil, false
	}
	return o.Fid, true
}

// HasFid returns a boolean if a field has been set.
func (o *SignedKeyRequestSponsor) HasFid() bool {
	if o != nil && !IsNil(o.Fid) {
		return true
	}

	return false
}

// SetFid gets a reference to the given int32 and assigns it to the Fid field.
func (o *SignedKeyRequestSponsor) SetFid(v int32) {
	o.Fid = &v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *SignedKeyRequestSponsor) GetSignature() string {
	if o == nil || IsNil(o.Signature) {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignedKeyRequestSponsor) GetSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.Signature) {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *SignedKeyRequestSponsor) HasSignature() bool {
	if o != nil && !IsNil(o.Signature) {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *SignedKeyRequestSponsor) SetSignature(v string) {
	o.Signature = &v
}

// GetSponsoredByNeynar returns the SponsoredByNeynar field value if set, zero value otherwise.
func (o *SignedKeyRequestSponsor) GetSponsoredByNeynar() bool {
	if o == nil || IsNil(o.SponsoredByNeynar) {
		var ret bool
		return ret
	}
	return *o.SponsoredByNeynar
}

// GetSponsoredByNeynarOk returns a tuple with the SponsoredByNeynar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignedKeyRequestSponsor) GetSponsoredByNeynarOk() (*bool, bool) {
	if o == nil || IsNil(o.SponsoredByNeynar) {
		return nil, false
	}
	return o.SponsoredByNeynar, true
}

// HasSponsoredByNeynar returns a boolean if a field has been set.
func (o *SignedKeyRequestSponsor) HasSponsoredByNeynar() bool {
	if o != nil && !IsNil(o.SponsoredByNeynar) {
		return true
	}

	return false
}

// SetSponsoredByNeynar gets a reference to the given bool and assigns it to the SponsoredByNeynar field.
func (o *SignedKeyRequestSponsor) SetSponsoredByNeynar(v bool) {
	o.SponsoredByNeynar = &v
}

func (o SignedKeyRequestSponsor) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignedKeyRequestSponsor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fid) {
		toSerialize["fid"] = o.Fid
	}
	if !IsNil(o.Signature) {
		toSerialize["signature"] = o.Signature
	}
	if !IsNil(o.SponsoredByNeynar) {
		toSerialize["sponsored_by_neynar"] = o.SponsoredByNeynar
	}
	return toSerialize, nil
}

type NullableSignedKeyRequestSponsor struct {
	value *SignedKeyRequestSponsor
	isSet bool
}

func (v NullableSignedKeyRequestSponsor) Get() *SignedKeyRequestSponsor {
	return v.value
}

func (v *NullableSignedKeyRequestSponsor) Set(val *SignedKeyRequestSponsor) {
	v.value = val
	v.isSet = true
}

func (v NullableSignedKeyRequestSponsor) IsSet() bool {
	return v.isSet
}

func (v *NullableSignedKeyRequestSponsor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignedKeyRequestSponsor(val *SignedKeyRequestSponsor) *NullableSignedKeyRequestSponsor {
	return &NullableSignedKeyRequestSponsor{value: val, isSet: true}
}

func (v NullableSignedKeyRequestSponsor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignedKeyRequestSponsor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
